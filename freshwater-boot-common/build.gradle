archivesBaseName = 'freshwater-boot-common'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

buildscript {
    ext {
        springBootVersion = '2.5.0'
    }
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/public/'}
        maven { url 'https://maven.aliyun.com/repository/central/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/google/' }
    maven { url 'https://maven.aliyun.com/repository/public/'}
    maven { url 'https://maven.aliyun.com/repository/central/' }
    mavenCentral()
}

processResources {
    from('src/main/java') {
        include '**/*.xml'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
// 打包，包括源代码
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

dependencies {
    compile 'io.jsonwebtoken:jjwt:0.9.1'
    compile 'commons-codec:commons-codec:1.15'
    compile 'org.apache.commons:commons-lang3:3.12.0'
    compile 'com.google.guava:guava:30.1.1-jre'
    compile 'com.alibaba:fastjson:1.2.83'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3'
    compile 'io.springfox:springfox-core:3.0.0'
    compile 'io.springfox:springfox-spring-web:3.0.0'
    compile 'io.springfox:springfox-boot-starter:3.0.0'
    compile 'com.github.xiaoymin:knife4j-spring-boot-starter:3.0.2'
    compile 'redis.clients:jedis:3.6.0'
    compile 'org.redisson:redisson:3.15.5'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.security:spring-security-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}